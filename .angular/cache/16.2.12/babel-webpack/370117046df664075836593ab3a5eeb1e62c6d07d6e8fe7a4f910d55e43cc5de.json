{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let RecargaComponent = class RecargaComponent {\n  constructor(http) {\n    this.http = http;\n    this.usuario = {\n      id: '',\n      username: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      phone: '',\n      userStatus: 0\n    };\n  }\n  enviarUsuario() {\n    this.http.post('https://petstore.swagger.io/v2/user', this.usuario).subscribe(response => {\n      console.log('Usuario enviado con éxito:', response);\n      // Aquí puedes manejar la respuesta del servidor si es necesario\n    }, error => {\n      console.error('Error al enviar el usuario:', error);\n      // Aquí puedes manejar el error si es necesario\n    });\n  }\n};\n\nRecargaComponent = __decorate([Component({\n  selector: 'app-recarga',\n  templateUrl: './recarga.component.html',\n  styleUrls: ['./recarga.component.css']\n})], RecargaComponent);","map":{"version":3,"names":["Component","RecargaComponent","constructor","http","usuario","id","username","firstName","lastName","email","password","phone","userStatus","enviarUsuario","post","subscribe","response","console","log","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\pablo\\Documents\\distribuidos\\Examen63-main\\Examen63Bravo\\src\\app\\pages\\recarga\\recarga.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ClienteService } from 'src/app/services/cliente.service';\n\n@Component({\n  selector: 'app-recarga',\n  templateUrl: './recarga.component.html',\n  styleUrls: ['./recarga.component.css']\n})\nexport class RecargaComponent {\n  usuario = {\n    id: '',\n    username: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    phone: '',\n    userStatus: 0\n  };\n\n  constructor(private http: HttpClient) {}\n\n  enviarUsuario() {\n    this.http.post('https://petstore.swagger.io/v2/user', this.usuario)\n      .subscribe(\n        (response) => {\n          console.log('Usuario enviado con éxito:', response);\n          // Aquí puedes manejar la respuesta del servidor si es necesario\n        },\n        (error) => {\n          console.error('Error al enviar el usuario:', error);\n          // Aquí puedes manejar el error si es necesario\n        }\n      );\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAY3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAXxB,KAAAC,OAAO,GAAG;MACRC,EAAE,EAAE,EAAE;MACNC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE;KACb;EAEsC;EAEvCC,aAAaA,CAAA;IACX,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,qCAAqC,EAAE,IAAI,CAACV,OAAO,CAAC,CAChEW,SAAS,CACPC,QAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,QAAQ,CAAC;MACnD;IACF,CAAC,EACAG,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC,CACF;EACL;CAED;;AA5BYlB,gBAAgB,GAAAmB,UAAA,EAL5BpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWtB,gBAAgB,CA4B5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}