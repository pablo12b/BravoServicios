{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/cliente.service\";\nexport class ClienteComponent {\n  constructor(formBuilder, clienteService) {\n    this.formBuilder = formBuilder;\n    this.clienteService = clienteService;\n    this.signUpForm = this.formBuilder.group({\n      nombre: ['', [Validators.required, Validators.minLength(4)]],\n      dni: ['', [Validators.required, Validators.minLength(10)]],\n      saldo: [0, [Validators.required, Validators.min(0)]]\n    });\n  }\n  onSubmit() {\n    if (this.signUpForm.valid) {\n      const cliente = this.signUpForm.value;\n      this.clienteService.saveClientes(cliente).subscribe(response => {\n        console.log('Registro exitoso', response);\n        alert('Registro exitoso');\n      }, error => {\n        console.error('Error al registrar el cliente', error);\n        // Aquí puedes manejar errores, como mostrar un mensaje al usuario\n      });\n    }\n  }\n  static #_ = this.ɵfac = function ClienteComponent_Factory(t) {\n    return new (t || ClienteComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ClienteService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClienteComponent,\n    selectors: [[\"app-cliente\"]],\n    decls: 19,\n    vars: 2,\n    consts: [[1, \"signup-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"nombre\"], [\"id\", \"nombre\", \"formControlName\", \"nombre\", \"type\", \"text\", \"placeholder\", \"Nombre completo\", \"required\", \"\"], [\"for\", \"dni\"], [\"id\", \"dni\", \"formControlName\", \"dni\", \"type\", \"text\", \"placeholder\", \"C\\u00E9dula\", \"required\", \"\"], [\"for\", \"saldo\"], [\"id\", \"saldo\", \"formControlName\", \"saldo\", \"type\", \"number\", \"placeholder\", \"Saldo inicial\", \"required\", \"\"], [1, \"form-actions\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function ClienteComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Registrarse\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ClienteComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Nombre completo:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"C\\u00E9dula:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Saldo inicial:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 9)(17, \"button\", 10);\n        i0.ɵɵtext(18, \"Registrarse\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.signUpForm);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"disabled\", !ctx.signUpForm.valid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".signup-container[_ngcontent-%COMP%] {\\n    max-width: 400px;\\n    margin: 50px auto;\\n    padding: 20px;\\n    border: 1px solid #ddd;\\n    border-radius: 5px;\\n    background-color: #f9f9f9;\\n  }\\n  \\n  .form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 15px;\\n  }\\n  \\n  label[_ngcontent-%COMP%] {\\n    display: block;\\n    margin-bottom: 5px;\\n  }\\n  \\n  input[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"number\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 10px;\\n    border: 1px solid #ddd;\\n    border-radius: 4px;\\n    box-sizing: border-box;\\n  }\\n  \\n  button[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 10px;\\n    border: none;\\n    border-radius: 4px;\\n    background-color: #eab37f;\\n    color: white;\\n    font-size: 16px;\\n    cursor: pointer;\\n  }\\n  \\n  button[_ngcontent-%COMP%]:disabled {\\n    background-color: #cccccc;\\n  }\\n  \\n  button[_ngcontent-%COMP%]:hover:not(:disabled) {\\n    background-color: #c58850;\\n  }\\n  \\n  .form-actions[_ngcontent-%COMP%] {\\n    margin-top: 20px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvY2xpZW50ZS9jbGllbnRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLHlCQUF5QjtFQUMzQjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxrQkFBa0I7RUFDcEI7O0VBRUE7OztJQUdFLFdBQVc7SUFDWCxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsYUFBYTtJQUNiLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixlQUFlO0lBQ2YsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLHlCQUF5QjtFQUMzQjs7RUFFQTtJQUNFLHlCQUF5QjtFQUMzQjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQiIsInNvdXJjZXNDb250ZW50IjpbIi5zaWdudXAtY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xuICAgIG1hcmdpbjogNTBweCBhdXRvO1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcbiAgfVxuICBcbiAgLmZvcm0tZ3JvdXAge1xuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gIH1cbiAgXG4gIGxhYmVsIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gIH1cbiAgXG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuICBpbnB1dFt0eXBlPVwibnVtYmVyXCJdLFxuICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgfVxuICBcbiAgYnV0dG9uIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VhYjM3ZjtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuICBcbiAgYnV0dG9uOmRpc2FibGVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjY2NjO1xuICB9XG4gIFxuICBidXR0b246aG92ZXI6bm90KDpkaXNhYmxlZCkge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNjNTg4NTA7XG4gIH1cbiAgXG4gIC5mb3JtLWFjdGlvbnMge1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gIH1cbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","ClienteComponent","constructor","formBuilder","clienteService","signUpForm","group","nombre","required","minLength","dni","saldo","min","onSubmit","valid","cliente","value","saveClientes","subscribe","response","console","log","alert","error","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","ClienteService","_2","selectors","decls","vars","consts","template","ClienteComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ClienteComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\pablo\\Documents\\distribuidos\\Examen63-main\\Examen63Bravo\\src\\app\\pages\\cliente\\cliente.component.ts","C:\\Users\\pablo\\Documents\\distribuidos\\Examen63-main\\Examen63Bravo\\src\\app\\pages\\cliente\\cliente.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Cliente } from 'src/app/domain/cliente';\nimport { ClienteService } from 'src/app/services/cliente.service';\nimport { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-cliente',\n  templateUrl: './cliente.component.html',\n  styleUrls: ['./cliente.component.css']\n})\nexport class ClienteComponent {\n  signUpForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private clienteService: ClienteService) {\n    this.signUpForm = this.formBuilder.group({\n      nombre: ['', [Validators.required, Validators.minLength(4)]], // Corregido\n      dni: ['', [Validators.required, Validators.minLength(10)]], \n      saldo: [0, [Validators.required, Validators.min(0)]],\n    });\n  }\n\n\n  onSubmit() {\n    if (this.signUpForm.valid) {\n      const cliente: Cliente = this.signUpForm.value;\n      this.clienteService.saveClientes(cliente).subscribe(\n        response => {\n          console.log('Registro exitoso', response);\n          alert('Registro exitoso')\n        },\n        error => {\n          console.error('Error al registrar el cliente', error);\n          // Aquí puedes manejar errores, como mostrar un mensaje al usuario\n        }\n      );\n    }\n  }\n}\n","<div class=\"signup-container\">\n    <h2>Registrarse</h2>\n    <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"nombre\">Nombre completo:</label>\n        <input id=\"nombre\" formControlName=\"nombre\" type=\"text\" placeholder=\"Nombre completo\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"dni\">Cédula:</label>\n        <input id=\"dni\" formControlName=\"dni\" type=\"text\" placeholder=\"Cédula\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"saldo\">Saldo inicial:</label>\n        <input id=\"saldo\" formControlName=\"saldo\" type=\"number\" placeholder=\"Saldo inicial\" required>\n      </div>\n      <div class=\"form-actions\">\n        <button type=\"submit\" [disabled]=\"!signUpForm.valid\">Registrarse</button>\n      </div>\n    </form>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}