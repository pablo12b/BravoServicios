{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ClienteComponent = class ClienteComponent {\n  constructor(clienteServicio) {\n    this.clienteServicio = clienteServicio;\n  }\n  ngOnInit() {\n    this.obtenerCliente(); // Llama al método para obtener los datos del cliente al inicializar el componente\n  }\n\n  obtenerCliente() {\n    this.clienteServicio.getCliente().subscribe(data => {\n      this.clienteData = data; // Almacena los datos del cliente en la variable\n    }, error => {\n      console.log('Error al obtener los datos del cliente:', error);\n    });\n  }\n};\nClienteComponent = __decorate([Component({\n  selector: 'app-cliente',\n  templateUrl: './cliente.component.html',\n  styleUrls: ['./cliente.component.css']\n})], ClienteComponent);","map":{"version":3,"names":["Component","ClienteComponent","constructor","clienteServicio","ngOnInit","obtenerCliente","getCliente","subscribe","data","clienteData","error","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\pablo\\Documents\\distribuidos\\Examen63-main\\Examen63Bravo\\src\\app\\pages\\cliente\\cliente.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Cliente } from 'src/app/domain/cliente';\nimport { ClienteService } from 'src/app/services/cliente.service';\nimport { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-cliente',\n  templateUrl: './cliente.component.html',\n  styleUrls: ['./cliente.component.css']\n})\nexport class ClienteComponent implements OnInit {\n  clienteData: any; // Variable para almacenar los datos del cliente\n\n  constructor(private clienteServicio: ClienteservicioService) { }\n\n  ngOnInit(): void {\n    this.obtenerCliente(); // Llama al método para obtener los datos del cliente al inicializar el componente\n  }\n\n  obtenerCliente() {\n    this.clienteServicio.getCliente().subscribe(\n      (data: any) => {\n        this.clienteData = data; // Almacena los datos del cliente en la variable\n      },\n      (error) => {\n        console.log('Error al obtener los datos del cliente:', error);\n      }\n    );\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAY1C,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAG3BC,YAAoBC,eAAuC;IAAvC,KAAAA,eAAe,GAAfA,eAAe;EAA4B;EAE/DC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE,CAAC,CAAC;EACzB;;EAEAA,cAAcA,CAAA;IACZ,IAAI,CAACF,eAAe,CAACG,UAAU,EAAE,CAACC,SAAS,CACxCC,IAAS,IAAI;MACZ,IAAI,CAACC,WAAW,GAAGD,IAAI,CAAC,CAAC;IAC3B,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEF,KAAK,CAAC;IAC/D,CAAC,CACF;EACH;CAED;AApBYT,gBAAgB,GAAAY,UAAA,EAL5Bb,SAAS,CAAC;EACTc,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWf,gBAAgB,CAoB5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}